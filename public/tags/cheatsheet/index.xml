<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cheatsheet on Jack Collins</title>
    <link>/tags/cheatsheet/</link>
    <description>Recent content in cheatsheet on Jack Collins</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 29 May 2025 09:47:00 +0100</lastBuildDate><atom:link href="/tags/cheatsheet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Some useful commands for Linux administration</title>
      <link>/articles/advanced_commands/</link>
      <pubDate>Thu, 29 May 2025 09:47:00 +0100</pubDate>
      
      <guid>/articles/advanced_commands/</guid>
      <description>I will update this page as I come across more interesting and less-known commands for Linux Administration, for my and your reference.
 Resource Management View the CPU load of a specific process only
top -p $(pgrep -d, appserver)
Limit the CPU usage of a process to 25%
cpulimit -e backup.sh -l 25
Migrate a running process to a different CPU core without restarting it
taskset -p 2 &amp;lt;PID&amp;gt;
Bind a process to specific CPU cores</description>
    </item>
    
    <item>
      <title>You should use Systemd Timers instead of Cron Jobs</title>
      <link>/articles/cron_vs_systemd/</link>
      <pubDate>Sat, 30 Dec 2023 09:00:11 +0100</pubDate>
      
      <guid>/articles/cron_vs_systemd/</guid>
      <description>What are Cron Jobs? What are Systemd Timers? Why use Systemd over Cron? Systemd Timer Example   What are Cron Jobs? Cron is a job scheduler that has been around on Unix based operating systems for a long time.
It is used to run commands or scripts at specific intervals of time, for example backing up a server via a shell script every Thursday at 9pm.
Cron uses something called the crontab, or Command Run On Table, to store it&amp;rsquo;s jobs, usually located under /var/spool/cron/.</description>
    </item>
    
    <item>
      <title>Ansible Bastion / Jumpbox Configuration</title>
      <link>/articles/ansible_bastion/</link>
      <pubDate>Tue, 27 Jun 2023 12:29:42 +0100</pubDate>
      
      <guid>/articles/ansible_bastion/</guid>
      <description>Often we&amp;rsquo;ll want to use Ansible to manage many servers, but some of those servers may not sit on the same area of the network. They might be in a Dematerialized Zone (DMZ) and only be accessible via a Bastion / Jumpbox server.
We can configure the Ansible Server to recognise Jumpbox configuration, so that it runs Ansible Playbooks on the DMZ Server, as though it were directly available;
Configuration  Firstly, make sure SSH keys are set up correctly.</description>
    </item>
    
    <item>
      <title>Ansible asynchronous actions and polling</title>
      <link>/articles/ansible_async_poll/</link>
      <pubDate>Sun, 23 Apr 2023 16:41:40 +0100</pubDate>
      
      <guid>/articles/ansible_async_poll/</guid>
      <description>Ansible will normally run Tasks synchronously, keeping a connection open for the entire time a Task runs.
If we have an especially long running task, for example an apt upgrade/dnf update or a long-running shell script, it may be better to close the connection and then re-establish it every now and then to see if the task has completed.
We might not want connections to stay open for a few reasons;</description>
    </item>
    
    <item>
      <title>Python Basics</title>
      <link>/articles/python_cheatsheet/</link>
      <pubDate>Tue, 18 Apr 2023 06:00:00 +0100</pubDate>
      
      <guid>/articles/python_cheatsheet/</guid>
      <description>Strings Advanced Strings Math Variables TypeError (&amp;ldquo;Can only concatenate str&amp;rdquo;) Functions Booleans (LT, GT, EQ, AND, OR, NOT) Conditional Statements (IF, ELIF, ELSE) Lists Tuples Looping (FOR, WHILE) Importing Modules Dictionaries (Key:Value Pairs) Sockets   Strings print(”Hello, world!”) # Double quotes
print(’Hello, world!’) # Single quotes
print(”This string is “+”awesome!”) # Concatenate
print(’\n’) # New line
print(variable_name) # Print a str variable
print(”””This string runs
multiple lines!”””) # Multi-line string</description>
    </item>
    
    <item>
      <title>An overview of Nmap</title>
      <link>/articles/nmap/</link>
      <pubDate>Thu, 02 Mar 2023 20:14:52 +0100</pubDate>
      
      <guid>/articles/nmap/</guid>
      <description>Background Usage Examples Cheatsheet Official Documentation Drawbacks Similar Tools   Background Nmap, or &amp;lsquo;Network Mapper&amp;rsquo;, was originally conceived in 1997 by Gordon Lyon, included as an article in Phrack Magazine along with it&amp;rsquo;s source code. The community at the time were so impressed with it&amp;rsquo;s early capabilities, it was taken up as a collaberative project by the tech community, and remains so right up until today.
Since it&amp;rsquo;s initial creation, Nmap has gone through many big updates, each adding more capabilities.</description>
    </item>
    
  </channel>
</rss>
