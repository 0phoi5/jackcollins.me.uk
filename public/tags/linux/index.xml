<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on Jack Collins</title>
    <link>/tags/linux/</link>
    <description>Recent content in linux on Jack Collins</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 31 Jan 2024 01:00:00 +0100</lastBuildDate><atom:link href="/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS curl to 169.254.169.254 failing, 401 Unauthorized</title>
      <link>/articles/ec2_imdsv2/</link>
      <pubDate>Wed, 31 Jan 2024 01:00:00 +0100</pubDate>
      
      <guid>/articles/ec2_imdsv2/</guid>
      <description>Scenario Resolution   Scenario As part of my simple bash script to automate AMI creation in EC2, using AWS CLI, a call is made to the &amp;lsquo;special IP address&amp;rsquo; 169.254.169.254 to retrieve the Instance ID for the current EC2 server.
This Instance ID is required in the create-image command I am using, as below, but you may have your own scenarios for using metadata provided by 169.254.169.254.
aws ec2 create-image --instance-id $(curl -s http://169.</description>
    </item>
    
    <item>
      <title>You should use Systemd Timers instead of Cron Jobs</title>
      <link>/articles/cron_vs_systemd/</link>
      <pubDate>Sat, 30 Dec 2023 09:00:11 +0100</pubDate>
      
      <guid>/articles/cron_vs_systemd/</guid>
      <description>What are Cron Jobs? What are Systemd Timers? Why use Systemd over Cron? Systemd Timer Example   What are Cron Jobs? Cron is a job scheduler that has been around on Unix based operating systems for a long time.
It is used to run commands or scripts at specific intervals of time, for example backing up a server via a shell script every Thursday at 9pm.
Cron uses something called the crontab, or Command Run On Table, to store it&amp;rsquo;s jobs, usually located under /var/spool/cron/.</description>
    </item>
    
    <item>
      <title>RPM / Yum - Fatal Error, run database recovery</title>
      <link>/articles/rpm_db_fatalerror/</link>
      <pubDate>Mon, 17 Apr 2023 12:31:14 +0100</pubDate>
      
      <guid>/articles/rpm_db_fatalerror/</guid>
      <description>Scenario When running yum clean all, or yum update, you get an error similar to the following;
error: rpmdb: BDB0113 Thread/process #/# failed: BDB1507 Thread died in Berkley DB library error: db5 error(-30973) from dbenv-&amp;gt;failchk BDB0087 DB_RUNRECOVERY: Fatal error, run database recovery error: cannot open Packages database in /var/lib/rpm CRITICAL:yum.main: Error: rpmdb open failed  Resolution Firstly, try clearing the yum cache and then rebuilding it, via;
sudo rm -rf /var/cache/yum/* sudo yum makecache If that doesn&amp;rsquo;t resolve, kill all yum related processes, delete the cache and all metadata, and rebuild;</description>
    </item>
    
    <item>
      <title>Huge Pages in Linux</title>
      <link>/articles/hugepages/</link>
      <pubDate>Fri, 14 Apr 2023 10:32:22 +0100</pubDate>
      
      <guid>/articles/hugepages/</guid>
      <description>What are Huge Pages? Checking the current status of Huge Pages How do I amend Huge Pages? Calculating Huge Pages Miscellaneous notes on Huge Pages   What are Huge Pages? Systems with large amounts of RAM may mean Huge Pages need to be implemented.
Each process has several physical memory segments allocated. To keep them all ‘tidy’ and as near to each other as possible, to keep the system running as fast as possible, the system builds a ‘memory map’, a table, to organise the memory segments.</description>
    </item>
    
    <item>
      <title>Amazon Workspaces on RHEL based distros</title>
      <link>/articles/rhel_workspaces/</link>
      <pubDate>Thu, 23 Feb 2023 20:06:30 +0100</pubDate>
      
      <guid>/articles/rhel_workspaces/</guid>
      <description>Amazon Workspaces is a brilliant offering by AWS to allow users access to Windows 10 (or Amazon Linux) based Virtual Machines in the cloud, from anywhere in the world. Unlike EC2, it much more easily scales up for companies to allow remote and cloud based, Active-Directory integrated fleets of VMs for employees. However we can also use it on an individual scale to give access to a true Windows 10 box (not Windows server 2019) from anywhere in the World, without the need for using local CPU, RAM and disk resources for the VM.</description>
    </item>
    
    <item>
      <title>Some useful commands for Linux administration</title>
      <link>/articles/advanced_commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/articles/advanced_commands/</guid>
      <description>I will update this page as I come across more interesting and less-known commands for Linux Administration, for my and your reference.
 Resource Management View the CPU load of a specific process only
top -p $(pgrep -d, appserver)
Limit the CPU usage of a process to 25%
cpulimit -e backup.sh -l 25
Migrate a running process to a different CPU core without restarting it
taskset -p 2 &amp;lt;PID&amp;gt;
Bind a process to specific CPU cores</description>
    </item>
    
  </channel>
</rss>
